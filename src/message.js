// Generated by CoffeeScript 1.9.0
(function() {
  var EnterMessage, LeaveMessage, Message, TextMessage, TopicMessage,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  Message = (function() {
    Message.prototype._type = 'message';


    /*
     * Represents an incoming message from the chat.
     *
     * user - A User instance that sent the message.
     */

    function Message(_at_user, _at_done) {
      this.user = _at_user;
      this.done = _at_done != null ? _at_done : false;
      this.room = this.user.room;
    }


    /*
     * Indicates that no other Listener should be called on this object
     *
     * Returns nothing.
     */

    Message.prototype.finish = function() {
      return this.done = true;
    };

    return Message;

  })();

  TextMessage = (function(_super) {
    __extends(TextMessage, _super);

    TextMessage.prototype._type = 'text';


    /*
     * Represents an incoming message from the chat.
     *
     * user - A User instance that sent the message.
     * text - A String message.
     * id   - A String of the message ID.
     */

    function TextMessage(_at_user, _at_text, _at_id) {
      this.user = _at_user;
      this.text = _at_text;
      this.id = _at_id;
      TextMessage.__super__.constructor.call(this, this.user);
    }


    /*
     * Determines if the message matches the given regex.
     *
     * regex - A Regex to check.
     *
     * Returns a Match object or null.
     */

    TextMessage.prototype.match = function(regex) {
      return this.text.match(regex);
    };


    /*
     * String representation of a TextMessage
     *
     * Returns the message text
     */

    TextMessage.prototype.toString = function() {
      return this.text;
    };

    return TextMessage;

  })(Message);


  /*
   * Represents an incoming user entrance notification.
   *
   * user - A User instance for the user who entered.
   * text - Always null.
   * id   - A String of the message ID.
   */

  EnterMessage = (function(_super) {
    __extends(EnterMessage, _super);

    function EnterMessage() {
      return EnterMessage.__super__.constructor.apply(this, arguments);
    }

    EnterMessage.prototype._type = 'enter';

    return EnterMessage;

  })(Message);


  /*
   * Represents an incoming user exit notification.
   *
   * user - A User instance for the user who left.
   * text - Always null.
   * id   - A String of the message ID.
   */

  LeaveMessage = (function(_super) {
    __extends(LeaveMessage, _super);

    function LeaveMessage() {
      return LeaveMessage.__super__.constructor.apply(this, arguments);
    }

    LeaveMessage.prototype._type = 'leave';

    return LeaveMessage;

  })(Message);


  /*
   * Represents an incoming topic change notification.
   *
   * user - A User instance for the user who changed the topic.
   * text - A String of the new topic
   * id   - A String of the message ID.
   */

  TopicMessage = (function(_super) {
    __extends(TopicMessage, _super);

    function TopicMessage() {
      return TopicMessage.__super__.constructor.apply(this, arguments);
    }

    TopicMessage.prototype._type = 'topic';

    return TopicMessage;

  })(TextMessage);

  module.exports = {
    Message: Message,
    TextMessage: TextMessage,
    EnterMessage: EnterMessage,
    LeaveMessage: LeaveMessage,
    TopicMessage: TopicMessage
  };

}).call(this);
